{"name":"faceted-values","tagline":"Haskell Implementation of faceted values.","body":"Haskell Implementation of Faceted Values\r\n----\r\n\r\nInspired by Thomas H. Austin and Cormac Flanagan, [\"Multiple Facets for Dynamic Information Flow.\"](http://users.soe.ucsc.edu/~cormac/papers/popl12b.pdf)\r\n\r\n> A _faceted value_ is a triple consisting _principal_ k and two values V<sub>H</sub>, V<sub>L</sub>, which write as:\r\n>\r\n> \\< k ? V<sub>H</sub>, V<sub>L</sub> \\>.\r\n>\r\n> Intuitively, this faceted value appeared as V<sub>H</sub> to private observers that can view k's private data, and as V<sub>L</sub> to other public observers.\r\n\r\nAs you can see, _faceted value_ can be a very strong primitive for supporting _privacy sensitive value_ in programming language level.\r\n\r\n[Jeeves](http://jeeveslang.org), a programming language for automatically enforcing privacy policies, is also based _faceted values_.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}